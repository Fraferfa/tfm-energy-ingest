name: Build & Deploy Ingestion

on:
  push:
    branches: [ main ]
  release:
    types: [published]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: europe-southwest1
  REPO: energy
  IMAGE_NAME: tfm-energy-ingest
  ARTIFACT_HOST: europe-southwest1-docker.pkg.dev
  INGEST_DATASETS: prices_pvpc prices_spot demand gen_mix interconn
  INGEST_SA: ingest-jobs-sa
  COMPACT_SA: compact-jobs-sa
  QC_SA: qc-jobs-sa
  SECRET_ESIOS: ESIOS_TOKEN

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # necesario para Workload Identity Federation

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python (optional for lint/tests)
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Derive tags
        id: meta
        run: |
          BRANCH_SAN="${GITHUB_REF_NAME//\//-}"
          echo "sha_tag=sha-${GITHUB_SHA}" >> $GITHUB_OUTPUT
          echo "branch_tag=branch-${BRANCH_SAN}" >> $GITHUB_OUTPUT

      - name: Auth to Google Cloud (Workload Identity Federation)
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_ID_PROVIDER }}
          service_account: ${{ secrets.GCP_CICD_SA }}

      - name: Configure gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Docker Auth Artifact Registry
        run: gcloud auth configure-docker ${{ env.ARTIFACT_HOST }} --quiet

      - name: Build image (sha + branch + latest)
        run: |
          docker build -t ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }} -f docker/Dockerfile .
          docker tag  ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }} \
                      ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.branch_tag }}
          docker tag  ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }} \
                      ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Push image
        run: |
          docker push ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
          docker push ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.branch_tag }}
          docker push ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest

      - name: Promote to prod on release
        if: github.event_name == 'release'
        run: |
          docker pull ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }}
          docker tag  ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.sha_tag }} \
                      ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:prod
          docker push ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:prod

      - name: Deploy ingest jobs (latest)
        if: github.ref == 'refs/heads/main'
        run: |
          for ds in ${{ env.INGEST_DATASETS }}; do
            JOB_NAME=$(echo "ingest-$ds" | tr '_' '-')
            echo "Deploy $JOB_NAME (dataset: $ds)"
            gcloud run jobs deploy $JOB_NAME \
              --image ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest \
              --region ${{ env.REGION }} \
              --service-account ${{ env.INGEST_SA }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
              --set-secrets ${{ env.SECRET_ESIOS }}=${{ env.SECRET_ESIOS }}:latest \
              --args ingest --args $ds
          done

      - name: Deploy compaction jobs (latest)
        if: github.ref == 'refs/heads/main'
        run: |
          gcloud run jobs deploy compact-monthly \
            --image ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --service-account ${{ env.COMPACT_SA }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --args="compact,--months-back,3,--force"
          
          gcloud run jobs deploy compact-clean \
            --image ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --service-account ${{ env.COMPACT_SA }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --args="compact,--months-back,3,--delete-originals,--force"

      - name: Deploy QC job (previous month interconn)
        if: github.ref == 'refs/heads/main'
        run: |
          Y=$(date -u +%Y -d "last month")
          M=$(date -u +%m -d "last month")
          gcloud run jobs deploy qc-interconn-latest \
            --image ${{ env.ARTIFACT_HOST }}/${{ env.PROJECT_ID }}/${{ env.REPO }}/${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --service-account ${{ env.QC_SA }}@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
            --args="qc,interconn,$Y,$M,--gcs-root,gs://energia-tfm-bucket"

      - name: Smoke test - Verify jobs exist
        if: github.ref == 'refs/heads/main'
        run: |
          echo "Verificando que los jobs se desplegaron correctamente..."
          FAILED=0
          
          for ds in ${{ env.INGEST_DATASETS }}; do
            JOB_NAME=$(echo "ingest-$ds" | tr '_' '-')
            if gcloud run jobs describe $JOB_NAME --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }} &>/dev/null; then
              echo "✓ $JOB_NAME exists"
            else
              echo "✗ $JOB_NAME NOT FOUND"
              FAILED=1
            fi
          done
          
          for job in compact-monthly compact-clean qc-interconn-latest; do
            if gcloud run jobs describe $job --region ${{ env.REGION }} --project ${{ env.PROJECT_ID }} &>/dev/null; then
              echo "✓ $job exists"
            else
              echo "✗ $job NOT FOUND"
              FAILED=1
            fi
          done
          
          if [ $FAILED -eq 1 ]; then
            echo "Smoke test FAILED: Some jobs are missing"
            exit 1
          fi
          
          echo "Smoke test PASSED: All jobs deployed successfully"

      - name: Summary
        run: |
          echo "✅ Publicadas: ${{ steps.meta.outputs.sha_tag }} / latest / ${{ steps.meta.outputs.branch_tag }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ Deploy jobs (main) completado" >> $GITHUB_STEP_SUMMARY
          echo "✅ Smoke test passed" >> $GITHUB_STEP_SUMMARY